name: Build and Push to Docker Hub

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create nginx config
      run: |
        cat > nginx.conf << 'EOL'
        server {
            listen 80;
            root /usr/share/nginx/html;
            index index.html;
            
            # Handle SPA routing
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            # Handle Cognito callback
            location /auth/callback {
                try_files $uri $uri/ /index.html;
            }
            
            # Enable CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
        EOL

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push image to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_REPOSITORY }}:latest
          ${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_REPOSITORY }}:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_REPOSITORY }}:buildcache,mode=max

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
